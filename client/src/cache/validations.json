{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "903739120006679eed0d759ed717e4e635cde8927314c3ca6076a88ceb8fe37c",
          "withoutMetadata": "79ee9574156e6e8762f9614b8c803d3b5de7a5211922ffa4c510ede72298e3c8",
          "linkedWithoutMetadata": "79ee9574156e6e8762f9614b8c803d3b5de7a5211922ffa4c510ede72298e3c8"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createPool(uint256,address,string,string,address,string,string)",
          "initializable()",
          "getPoolOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1707_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1707_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1698_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1707_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1698_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1698_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1707_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1698_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1707_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2296_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2296_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2296_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2296_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "903739120006679eed0d759ed717e4e635cde8927314c3ca6076a88ceb8fe37c",
          "withoutMetadata": "79ee9574156e6e8762f9614b8c803d3b5de7a5211922ffa4c510ede72298e3c8",
          "linkedWithoutMetadata": "79ee9574156e6e8762f9614b8c803d3b5de7a5211922ffa4c510ede72298e3c8"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createPool(uint256,address,string,string,address,string,string)",
          "initializable()",
          "getPoolOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1707_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1707_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1698_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1707_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1698_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1698_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1707_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1698_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1707_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2296_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2296_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2296_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2296_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "d12e78badafcd6e49d2d24929f16c1ab39537af262f779ede9e1ca11906f993c",
          "withoutMetadata": "efef588ef31ed919aea1970e54aa046eac20dd5d8d45e309a895420aecac42c0",
          "linkedWithoutMetadata": "efef588ef31ed919aea1970e54aa046eac20dd5d8d45e309a895420aecac42c0"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createPool(uint256,address,string,string,address,string,string)",
          "initializable()",
          "getPoolOwner(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1716_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1716_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1707_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1716_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1707_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1707_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1716_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1707_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1716_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2305_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2305_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2305_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2305_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "4a362b5c01d981d69ff2a82e376183483f756685c742d401ccce6fad837b5879",
          "withoutMetadata": "981de0fe6be964d26b321eec255cfb3f21bfa5e1c79bd690d073f0b39e4a5c52",
          "linkedWithoutMetadata": "981de0fe6be964d26b321eec255cfb3f21bfa5e1c79bd690d073f0b39e4a5c52"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createPool(uint256,address,string,string,address,string,string)",
          "initializable()",
          "getPoolOnwer(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1717_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1717_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1708_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1717_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1708_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1708_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1717_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1708_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1717_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2306_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2306_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2306_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2306_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "4a362b5c01d981d69ff2a82e376183483f756685c742d401ccce6fad837b5879",
          "withoutMetadata": "981de0fe6be964d26b321eec255cfb3f21bfa5e1c79bd690d073f0b39e4a5c52",
          "linkedWithoutMetadata": "981de0fe6be964d26b321eec255cfb3f21bfa5e1c79bd690d073f0b39e4a5c52"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "createPool(uint256,address,string,string,address,string,string)",
          "initializable()",
          "getPoolOnwer(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1717_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1717_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1708_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1717_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1708_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1708_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1717_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1708_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1717_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2306_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2306_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2306_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2306_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "2fc14125c0371a7dea04f52d2a1ad6c877983e934346b2fdd5f039a39eba5746",
          "withoutMetadata": "fd6af621683a2b05e0c87b6d0acf43a7d9a91d97699da32514f6854a40f2b204",
          "linkedWithoutMetadata": "fd6af621683a2b05e0c87b6d0acf43a7d9a91d97699da32514f6854a40f2b204"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1695_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1686_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1695_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1686_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1695_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2284_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2284_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "eb5817885fd725b2e245da4a0994ca82d5fa4f6a9ad3b22d01ed70e5255f9192",
          "withoutMetadata": "431491e89f6211e483ec7a2a64c6f9ec259d3f0ef6cbe1a207d48570bef6c89d",
          "linkedWithoutMetadata": "431491e89f6211e483ec7a2a64c6f9ec259d3f0ef6cbe1a207d48570bef6c89d"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1695_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1686_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1695_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1686_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1695_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2284_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2284_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "232a0d6917d786281aab438b95f83278e9e3e461401c6270af51932015c57d44",
          "withoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c",
          "linkedWithoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1695_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1686_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1695_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1686_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1695_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2284_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2284_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:8",
        "version": {
          "withMetadata": "e8b3f6448dbdc3513781245db019836657d5829fd8abdad08ed49d2f3f8efb95",
          "withoutMetadata": "72f730ca4f0975cc0549ff892e1fa6a1f374e2e8b08d7e794ecbf4cb63cb9fad",
          "linkedWithoutMetadata": "72f730ca4f0975cc0549ff892e1fa6a1f374e2e8b08d7e794ecbf4cb63cb9fad"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:11"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)941_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)941_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)932_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)941_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)932_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)932_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)941_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)932_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)941_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:8",
        "version": {
          "withMetadata": "51f7d363bf3387c8544d469fceed35d7e592d24c0da778f02bb364311c82f2dc",
          "withoutMetadata": "dee14104f79be80d80232db17435ad13b907a95cd91c01b572546f0eb8dd0318",
          "linkedWithoutMetadata": "dee14104f79be80d80232db17435ad13b907a95cd91c01b572546f0eb8dd0318"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:11"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1703_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1703_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1694_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1703_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1694_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1694_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1703_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1694_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1703_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2292_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2292_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2292_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2292_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:8",
        "version": {
          "withMetadata": "9c4eec729dde3c71fb48a7be160c0d0309fa1693e3770b556a33359339a8f937",
          "withoutMetadata": "7387db3c03cf6d3b54194cc81654be74b94e29be048822b4c38b06114c735ad6",
          "linkedWithoutMetadata": "7387db3c03cf6d3b54194cc81654be74b94e29be048822b4c38b06114c735ad6"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "console"
        ],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:11"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)940_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)940_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)931_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)940_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)931_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)931_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)940_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)931_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)940_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "232a0d6917d786281aab438b95f83278e9e3e461401c6270af51932015c57d44",
          "withoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c",
          "linkedWithoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1695_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1686_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1695_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1686_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1695_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2284_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2284_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "232a0d6917d786281aab438b95f83278e9e3e461401c6270af51932015c57d44",
          "withoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c",
          "linkedWithoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)1695_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)1695_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1686_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1686_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)1695_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)1686_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)1695_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)2284_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)2284_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)2284_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PoolFactory": {
        "src": "contracts/PoolFactory.sol:7",
        "version": {
          "withMetadata": "232a0d6917d786281aab438b95f83278e9e3e461401c6270af51932015c57d44",
          "withoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c",
          "linkedWithoutMetadata": "460034956c450f8fdc1879c22fe3aaefd038683f56495511adf2bb547426251c"
        },
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "initializable()",
          "createPool(uint256,address,string,string,address,string,string)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "pools",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:10"
            },
            {
              "label": "poolOwner",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
              "contract": "PoolFactory",
              "src": "contracts/PoolFactory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_array(t_address)dyn_storage)": {
              "label": "mapping(address => address[])"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "1c0deacefa4ea89d780e98b865a185ecb1b515bd2f39cd0a993c94fbd29984e7",
          "withoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015",
          "linkedWithoutMetadata": "1485ff286dbe8b4a18792f6ed09f86510ada985093dabdb53eb733e833c7b015"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize(address,string,string,address,string,string)",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "deposit(address,uint256)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "rate",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:23"
            },
            {
              "label": "tokenA",
              "offset": 0,
              "slot": "102",
              "type": "t_struct(Token)933_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:24"
            },
            {
              "label": "tokenB",
              "offset": 0,
              "slot": "106",
              "type": "t_struct(Token)933_storage",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:25"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "110",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)924_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:27"
            },
            {
              "label": "poolToken",
              "offset": 0,
              "slot": "111",
              "type": "t_mapping(t_address,t_struct(Token)933_storage)",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)924_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)924_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_mapping(t_address,t_struct(Token)933_storage)": {
              "label": "mapping(address => struct SwapToken.Token)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_struct(Rate)924_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_struct(Token)933_storage": {
              "label": "struct SwapToken.Token",
              "members": [
                {
                  "label": "tokenAddress",
                  "type": "t_address"
                },
                {
                  "label": "amount",
                  "type": "t_uint256"
                },
                {
                  "label": "name",
                  "type": "t_string_storage"
                },
                {
                  "label": "symbol",
                  "type": "t_string_storage"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "b81403f6c49d4c66144f0567254dd92f440cb8cf6c7c634ef5765cc2f614f34b",
          "withoutMetadata": "0394c6fd592140526b07534a68fcecde413abe2bacaeee85fa0fbddf8e7d9c37",
          "linkedWithoutMetadata": "0394c6fd592140526b07534a68fcecde413abe2bacaeee85fa0fbddf8e7d9c37"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)800_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)800_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)800_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_struct(Rate)800_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:18",
        "version": {
          "withMetadata": "ec0dc6c8b0db39b6b6a95c7fac95f8130db0a88cf991b39d6fb2ffd123fd4e91",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "36f886c99df0c8568629da62427eb4cf3a1348ffbe093772e1883f817cdb418c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "ea978cc653db373b3132bfe2b4b8ac3a644fafaecf3c32e718fe2e10bdb1632e",
          "withoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6",
          "linkedWithoutMetadata": "d66c4da218b1f89a9d2ca4da9465761e34d97c5f05aefbedbf26f91faccfbef6"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Greeter": {
        "src": "contracts/Greeter.sol:6",
        "version": {
          "withMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "withoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed",
          "linkedWithoutMetadata": "cdc98d368ba15f76d3bdcf130032927595ebc19dc19c217ecbacc906bd7bc1ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts/Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts/Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapToken": {
        "src": "contracts/SwapToken.sol:8",
        "version": {
          "withMetadata": "b81403f6c49d4c66144f0567254dd92f440cb8cf6c7c634ef5765cc2f614f34b",
          "withoutMetadata": "0394c6fd592140526b07534a68fcecde413abe2bacaeee85fa0fbddf8e7d9c37",
          "linkedWithoutMetadata": "0394c6fd592140526b07534a68fcecde413abe2bacaeee85fa0fbddf8e7d9c37"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "changeRate(address,address,uint256,uint32)",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1562_storage))",
              "contract": "SwapToken",
              "src": "contracts/SwapToken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1562_storage))": {
              "label": "mapping(address => mapping(address => struct SwapToken.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1562_storage)": {
              "label": "mapping(address => struct SwapToken.Rate)"
            },
            "t_struct(Rate)1562_storage": {
              "label": "struct SwapToken.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SwapTokenV2": {
        "src": "contracts/SwapTokenV2.sol:8",
        "version": {
          "withMetadata": "c407698bc8902bf7cc392bd548640c16176af4f0efedd3b4978fa1eee08e19c6",
          "withoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305",
          "linkedWithoutMetadata": "4b02363211841a7e04b82bd95084502284be1c1975d8089dde50fa8563af5305"
        },
        "inherit": [
          "OwnableUpgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeERC20Upgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "swap(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "tokenRate",
              "offset": 0,
              "slot": "101",
              "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1865_storage))",
              "contract": "SwapTokenV2",
              "src": "contracts/SwapTokenV2.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]"
            },
            "t_bool": {
              "label": "bool"
            },
            "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)1865_storage))": {
              "label": "mapping(address => mapping(address => struct SwapTokenV2.Rate))"
            },
            "t_mapping(t_address,t_struct(Rate)1865_storage)": {
              "label": "mapping(address => struct SwapTokenV2.Rate)"
            },
            "t_struct(Rate)1865_storage": {
              "label": "struct SwapTokenV2.Rate",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint256"
                },
                {
                  "label": "decimals",
                  "type": "t_uint32"
                }
              ]
            },
            "t_uint256": {
              "label": "uint256"
            },
            "t_uint32": {
              "label": "uint32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:6",
        "version": {
          "withMetadata": "cf023cd8c8ea26989bbd8e114f9bd2651645a860a6ccd7f8fece8f71d844a4a8",
          "withoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c",
          "linkedWithoutMetadata": "a8078d9358d5324469e86a7615d658dc3a6f6277f56c6865f4969b54df96a94c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)"
            },
            "t_string_storage": {
              "label": "string"
            },
            "t_uint256": {
              "label": "uint256"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "6f405f5f52fc5fa4f96d6c5a0d9bcb722d99104abc0eb2388d158d16f208bce7",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}